<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>geniusweb.pompfan</groupId>
	<artifactId>pompfan</artifactId>
	<version>1.6.1</version> <!-- must equal ${geniusweb.version} -->
	<packaging>jar</packaging>


	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.target>1.8</maven.compiler.target>
		<maven.compiler.source>1.8</maven.compiler.source>
		<basedir>.</basedir>
		<passwd>${env.ARTIFACTORY_PASS}</passwd>
		<jackson-2-version>2.12.4</jackson-2-version>
		<geniusweb.version>1.6.1</geniusweb.version>
		<dl4j-master.version>1.0.0-M1</dl4j-master.version>
		<agent.target>geniusweb.pompfan.agent.POMPFANAgent</agent.target>
	</properties>

	<distributionManagement>
		<repository>
			<id>artifactory.ewi.tudelft.nl</id>
			<url>http://artifactory.ewi.tudelft.nl/artifactory/libs-release</url>
		</repository>
	</distributionManagement>


	<dependencies>

		<dependency>
			<groupId>geniusweb</groupId>
			<artifactId>party</artifactId>
			<version>${geniusweb.version}</version>
		</dependency>

		<dependency>
			<groupId>geniusweb</groupId>
			<artifactId>bidspace</artifactId>
			<version>${geniusweb.version}</version>
		</dependency>
		<dependency>
			<groupId>geniusweb</groupId>
			<artifactId>opponentmodel</artifactId>
			<version>${geniusweb.version}</version>
		</dependency>
		<dependency>
			<groupId>geniusweb</groupId>
			<artifactId>profileconnection</artifactId>
			<version>${geniusweb.version}</version>
		</dependency>
		<dependency>
			<groupId>tudelft.utilities</groupId>
			<artifactId>logging</artifactId>
			<version>1.0.1</version>
		</dependency>
		<dependency>
			<groupId>tudelft.utilities</groupId>
			<artifactId>immutablelist</artifactId>
			<version>1.1.2</version>
		</dependency>

		<!-- the core, which includes Streaming API, shared low-level abstractions 
			(but NOT data-binding) -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jackson-2-version}</version>
		</dependency>

		<!-- Just the annotations; use this dependency if you want to attach annotations 
			to classes without connecting them to the code. -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${jackson-2-version}</version>
		</dependency>

		<!-- databinding; ObjectMapper, JsonNode and related classes are here -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson-2-version}</version>
		</dependency>

		<!-- smile (binary JSON). Other artifacts in this group do other formats. -->
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-smile</artifactId>
			<version>${jackson-2-version}</version>
		</dependency>
		<!-- JAX-RS provider -->
		<dependency>
			<groupId>com.fasterxml.jackson.jaxrs</groupId>
			<artifactId>jackson-jaxrs-json-provider</artifactId>
			<version>${jackson-2-version}</version>
		</dependency>
		<!-- Support for JAX-B annotations as additional configuration -->
		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-jaxb-annotations</artifactId>
			<version>${jackson-2-version}</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.9.5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>tudelft.utilities</groupId>
			<artifactId>junit</artifactId>
			<version>1.0.5</version>
			<scope>test</scope>
		</dependency>
        <!-- deeplearning4j-core: contains main functionality and neural networks -->
        <dependency>
            <groupId>org.deeplearning4j</groupId>
            <artifactId>deeplearning4j-core</artifactId>
            <version>${dl4j-master.version}</version>
        </dependency>

        <!--
        ND4J backend: every project needs one of these. The backend defines the hardware on which network training
        will occur. "nd4j-native-platform" is for CPUs only (for running on all operating systems).
        -->
        <dependency>
            <groupId>org.nd4j</groupId>
            <artifactId>nd4j-native</artifactId>
            <version>${dl4j-master.version}</version>
        </dependency>
		<!-- Guava -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>30.1.1-jre</version>
		  </dependency>
		<!-- CUSTOM: Runner configs -->
		<dependency>
			<groupId>geniusweb</groupId>
			<artifactId>simplerunner</artifactId>
			<version>${geniusweb.version}</version>
		</dependency>
		<dependency>
			<groupId>geniusweb</groupId>
			<artifactId>protocol</artifactId>
			<version>${geniusweb.version}</version>
		</dependency>
		<dependency>
			<groupId>geniusweb</groupId>
			<artifactId>events</artifactId>
			<version>${geniusweb.version}</version>
		</dependency>
		<!-- CUSTOM: Parties -->

		<!-- CUSTOM: ANAC 2021 local repo Parties -->
		<dependency>
			<groupId>geniusweb.exampleparties.anac2021</groupId>
			<artifactId>agentfo</artifactId>
			<version>${geniusweb.version}</version>
		</dependency>
		<dependency>
			<groupId>geniusweb.exampleparties.anac2021</groupId>
			<artifactId>alienmatrixagent</artifactId>
			<version>${geniusweb.version}</version>
		</dependency>
		<dependency>
			<groupId>geniusweb.exampleparties.anac2021</groupId>
			<artifactId>alphabiu</artifactId>
			<version>${geniusweb.version}</version>
		</dependency>
		<dependency>
			<groupId>geniusweb.exampleparties.anac2021</groupId>
			<artifactId>aorta</artifactId>
			<version>${geniusweb.version}</version>
		</dependency>
		<dependency>
			<groupId>geniusweb.exampleparties.anac2021</groupId>
			<artifactId>dicehaggler</artifactId>
			<version>${geniusweb.version}</version>
		</dependency>
		<dependency>
			<groupId>geniusweb.exampleparties.anac2021</groupId>
			<artifactId>gambleragent</artifactId>
			<version>${geniusweb.version}</version>
		</dependency>
		<dependency>
			<groupId>geniusweb.exampleparties.anac2021</groupId>
			<artifactId>tripleagent</artifactId>
			<version>${geniusweb.version}</version>
		</dependency>
		<!-- CUSTOM: basic Parties from Genius Web -->
		<dependency>
			<groupId>geniusweb.exampleparties</groupId>
			<artifactId>boulware</artifactId>
			<version>${geniusweb.version}</version>
		</dependency>
		<dependency>
			<groupId>geniusweb.exampleparties</groupId>
			<artifactId>conceder</artifactId>
			<version>${geniusweb.version}</version>
		</dependency>
		<dependency>
			<groupId>geniusweb.exampleparties</groupId>
			<artifactId>linear</artifactId>
			<version>${geniusweb.version}</version>
		</dependency>
		<dependency>
			<groupId>geniusweb.exampleparties</groupId>
			<artifactId>hardliner</artifactId>
			<version>${geniusweb.version}</version>
		</dependency>
		<dependency>
			<groupId>geniusweb.exampleparties</groupId>
			<artifactId>simpleboaparty</artifactId>
			<version>${geniusweb.version}</version>
		</dependency>
		<dependency>
			<groupId>geniusweb.exampleparties</groupId>
			<artifactId>comparebids</artifactId>
			<version>${geniusweb.version}</version>
		</dependency>
		<dependency>
			<groupId>geniusweb.exampleparties.anac2019</groupId>
			<artifactId>winkyagent</artifactId>
			<version>${geniusweb.version}</version>
		</dependency>

		<!-- <dependency>
			<groupId>geniusweb</groupId>
			<artifactId>exampleparties</artifactId>
			<version>-</version>
			<type>pom</type>
		</dependency> -->
		<!-- <dependency>
			<groupId>geniusweb.exampleparties</groupId>
			<artifactId>boulware</artifactId>
			<version>${geniusweb.version}</version>
			<classifier>sources</classifier>
		</dependency> -->
		<!-- <dependency>
			<groupId>geniusweb</groupId>
			<artifactId>exampleparties</artifactId>
			<version>-</version>
			<type>pom</type>
		</dependency> -->
	</dependencies>


	<repositories>
		<repository>
			<id>artifactory.ewi.tudelft.nl</id>
			<url>http://artifactory.ewi.tudelft.nl/artifactory/libs-release</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>

		<!-- CUSTOM: Local ANAC2021 agents repo -->
		<repository>
			<id>repo</id>
			<url>file://${project.basedir}/repo</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>central</id>
			<url>https://repo1.maven.org/maven2/</url>
		</pluginRepository>
		<!-- <pluginRepository>
			<id>jfrog-plugins-release</id>
			<name>plugins-release</name>
			<url>https://oss.jfrog.org/artifactory/plugins-release</url>
		</pluginRepository> -->
	</pluginRepositories>


	<build>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.0</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.2.0</version>
				<configuration>
					<archive>
						<manifest>
							<mainClass>${agent.target}</mainClass> 
						</manifest>
					</archive>
				</configuration>
			</plugin>

			<!-- <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin> -->

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.4.1</version>
				<configuration>
					<!-- get all project dependencies -->
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
							<mainClass>${agent.target}</mainClass>
						</manifest>
					</archive>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<!-- bind to the packaging phase -->
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>


		</plugins>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.jfrog.buildinfo</groupId>
										<artifactId>artifactory-maven-plugin</artifactId>
										<versionRange>[1.0.0,)</versionRange>
										<goals>
											<goal>publish</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>


	</build>
</project>
